{
  "checklist": {
    "Settings": "",
    "Functionality": {
      "Authentication": {
        "description": "",
        "tests": {
          "Authentication Bypass - Vertical": {
            "description": "Check to see if the login sequence can be bypassed in any way to get higher level permissions.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Authentication Bypass - Horizontal": {
            "description": "Check to see if the login sequence can be bypassed in any way to get access to a user of the same account type.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Cross Site Scripting": {
            "description": "Check all parameters that present any kind of reflection.",
            "resources": [
              "https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)",
              "https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)"
            ],
            "bugs": [],
            "notes": ""
          },
          "Server Security Misconfiguration": {
            "description": "Check to see if the application was configured using common default credentials",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as a SELECT statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "Account": {
        "description": "",
        "tests": {
          "Authentication Bypass - Vertical": {
            "description": "Check to see if any kind of checks can be bypassed in any way to perform actions that require higher level permissions.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Authentication Bypass - Horizontal": {
            "description": "Check to see if any kind of checks can be bypassed in any way to perform actions as a user of the same type.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Cross Site Scripting": {
            "description": "Check all parameters that present any kind of reflection.",
            "resources": ["https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)"],
            "bugs": [],
            "notes": ""
          },
          "Cross Site Request Forgery": {
            "description": "Check the reset password as well as updating other account information.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Insecure Direct Object Reference": {
            "description": "Check if you can get access to other users accounts by changing common parameters.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as an INSERT, DELETE, or UPDATE statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "Account Recovery": {
        "description": "",
        "tests": {
          "Cross Site Scripting": {
            "description": "Check all parameters that present any kind of reflection.",
            "resources": ["https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)"],
            "bugs": [],
            "notes": ""
          },
          "Insecure Direct Object Reference": {
            "description": "Check to see if you can reset other user accounts and have the recovery sent to something you control",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as a SELECT statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "Account Registration": {
        "description": "",
        "tests": {
          "Application-Level Denial-of-Service (DoS)": {
            "description": "Check for the ability to perform a DoS on account creations. Be very careful while testing.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Cross Site Scripting": {
            "description": "Check all parameters that present any kind of reflection.",
            "resources": ["https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)"],
            "bugs": [],
            "notes": ""
          },
          "Insecure Direct Object Reference": {
            "description": "Check to see if you can overwrite existing accounts and make them your own. Be very careful while testing and only do so on an account that you own.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as a SELECT or INSERT statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "API": {
        "description": "",
        "tests": {
          "Authentication Bypass - Vertical": {
            "description": "Check to see if any kind of checks can be bypassed in any way to perform actions that require higher level permissions.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Authentication Bypass - Horizontal": {
            "description": "Check to see if any kind of checks can be bypassed in any way to perform actions as a user of the same type.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Critically Sensitive Data - Private API Keys": {
            "description": "Check for private API keys.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Cross Site Request Forgery": {
            "description": "Check to see if there is any CSRF protection on any kind of sensitive functionality.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Insecure Direct Object Reference": {
            "description": "Check to see if anything can be accessed through the API that you should not have access to.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as a SELECT, INSERT, DELETE, or UPDATE statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "Contact Us": {
        "description": "",
        "tests": {
          "Cross Site Scripting": {
            "description": "Check all parameters that present any kind of reflection.",
            "resources": ["https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)"]
          },
          "Insecure Direct Object Reference": {
            "description": "Check to see if you can control where the contact emails go to create an email relay.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as a SELECT statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "File Download/Upload": {
        "description": "",
        "tests": {
          "Cross Site Scripting": {
            "description": "Check all parameters that present any kind of reflection when uploading a file.",
            "resources": ["https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)"],
            "bugs": [],
            "notes": ""
          },
          "Insecure Direct Object Reference": {
            "description": "Check to see if you can download files that you should not have access to. Also check to see if you can upload files as other users.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Server-Side Injection - Local File Inclusion": {
            "description": "Check for Local File Inclusion when downloading files.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Server-Side Injection - Remote Code Execution": {
            "description": "Check for Remote Code Execution when uploading files to the application's server.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as a SELECT, INSERT, DELETE, or UPDATE statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "General": {
        "description": "",
        "tests": {
          "Application-Level Denial-of-Service (DoS)": {
            "description": "Check for the ability to perform a DoS on certain functionalities that are susecptible to attack. Be very careful while testing.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Server-Side Injection - XML External Entity Injection": {
            "description": "Check for XXE on requests that present themselves with the HTTP response Content-Type of application/xml.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Server-Side Request Forgery": {
            "description": "Check for SSRF on requests that present themselves as doing server type functionality from the client side.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "Server Security Misconfiguration": {
            "description": "Check to see if the DNS has been misconfigured for subdomain takeover.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "Search": {
        "description": "",
        "tests": {
          "Cross Site Scripting": {
            "description": "Check all parameters that present any kind of reflection when uploading a file.",
            "resources": ["https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)"],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as a SELECT statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      },
      "Money Transactions": {
        "description": "",
        "tests": {
          "Cross Site Scripting": {
            "description": "Check all parameters that present any kind of reflection.",
            "resources": ["https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)"],
            "bugs": [],
            "notes": ""
          },
          "Insecure Direct Object Reference": {
            "description": "Check to see if you can change the transaction details. Try things like changing how much money will be paid, which account money is coming from and where the money is going to get sent to, see if you can set negative amounts of money, etc.",
            "resources": [],
            "bugs": [],
            "notes": ""
          },
          "SQL Injection": {
            "description": "Check all parameters that present themselves as a SELECT, INSERT, or UPDATE statement.",
            "resources": [],
            "bugs": [],
            "notes": ""
          }
        }
      }
    }
  }
}

